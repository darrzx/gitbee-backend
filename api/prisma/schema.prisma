// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Project {
  id                Int             @id @default(autoincrement())
  lecturer_id       String          @db.VarChar(50)
  student_leader_id String          @db.VarChar(50)
  projectDetail     ProjectDetail? 
  projectGroups     ProjectGroup[]
  gallery           Gallery[]

  @@map("project")
}

model ProjectDetail {
  id                Int             @id @default(autoincrement())
  project_id        Int             @unique
  name              String          @db.VarChar(255)
  semester_id       String          @db.VarChar(100)
  course_id         String          @db.VarChar(50)
  class             String          @db.VarChar(20)
  github_link       String          @db.Text
  project_link      String          @db.Text
  documentation     String          @db.Text
  thumbnail         String          @db.Text
  status_id         Int
  category_id       Int
  project           Project         @relation(fields: [project_id], references: [id], onDelete: Cascade)
  status            Status          @relation(fields: [status_id], references: [id], onDelete: Cascade)
  category          Category        @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@map("project_detail")
}

model ProjectGroup {
  id                Int             @id @default(autoincrement())
  project_id        Int     
  student_id        String          @db.VarChar(50)
  project           Project         @relation(fields: [project_id], references: [id], onDelete: Cascade)

  @@map("project_group")
}

model Gallery {
  id                Int             @id @default(autoincrement())
  project_id        Int     
  image             String          @db.Text
  project           Project         @relation(fields: [project_id], references: [id], onDelete: Cascade)

  @@map("gallery")
}

model Status {
  id                Int             @id @default(autoincrement())
  name              String          @db.VarChar(50)
  projectDetails    ProjectDetail[] 

  @@map("status")
}

model Category {
  id                Int             @id @default(autoincrement())
  name              String          @db.VarChar(100)
  projectDetails    ProjectDetail[] 

  @@map("category")
}